name: Bygg og deploy

on:
  push:
    branches:
      - master
env:
  APP: spleis-testdata
  TEAM: tbd
  IMAGE: docker.pkg.github.com/${{ github.repository }}/spleis-testdata
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '16.x'
    - uses: actions/setup-node@v1
      with:
        node-version: "12.x"
    - name: create docker tag
      run: echo "TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
    - name: test and build
      run: ./gradlew test build
      env:
        ORG_GRADLE_PROJECT_githubUser: x-access-token
        ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache node deps
      id: cache-node
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    - name: build frontend
      run: |
        cd frontend
        npm ci
        npm run build
    - name: build docker imagex
      run: docker build . --pull -t ${{ env.IMAGE }}:${{ env.TAG }}
    - name: push docker image
      run: |
        echo "$GITHUB_TOKEN" | docker login --username "$GITHUB_REPOSITORY" --password-stdin https://docker.pkg.github.com
        docker push ${{ env.IMAGE }}:${{ env.TAG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: deploy to dev
      uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-fss
        RESOURCE: deploy/dev.yml
        WAIT: false
        VAR: "image=${{env.IMAGE}},tag=${{env.TAG}},team=${{env.TEAM}},app=${{env.APP}}"
